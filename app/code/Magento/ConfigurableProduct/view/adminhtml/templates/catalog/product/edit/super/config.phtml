<?php
/**
 * Copyright Â© 2015 Magento. All rights reserved.
 * See COPYING.txt for license details.
 */

// @codingStandardsIgnoreFile

 /** @var $block \Magento\ConfigurableProduct\Block\Adminhtml\Product\Edit\Tab\Super\Config */

use Magento\ConfigurableProduct\Model\Product\Type\Configurable;
?>
<div class="entry-edit form-inline" id="<?php echo $block->getId() ?>">
    <div class="fieldset-wrapper admin__collapsible-block-wrapper" id="<?php echo $block->getId() ?>-wrapper" data-panel="product-variations">
        <div class="fieldset-wrapper-title">
            <strong class="admin__collapsible-title" data-toggle="collapse" data-target="#<?php echo $block->getId() ?>-content">
                <span><?= __('Configurations') ?></span>
            </strong>
        </div>

        <div class="fieldset-wrapper-content collapse" data-collapsed="true" id="<?php echo $block->getId() ?>-content">
            <div data-bind="scope: 'variation-steps-wizard'" class="product-create-configuration">
                <div class="product-create-configuration-info">
                    <div class="note">
                        <?= __('Configurable products allow customers to choose options (Ex: shirt color).
                    You need to create a simple product for each configuration (Ex: a product for each color).');?>
                    </div>
                </div>
                <div class="product-create-configuration-actions">
                    <button data-action="open-steps-wizard" title="Create Product Configurations"
                            class="action-secondary" data-bind="click: open">
                        <span data-role="button-label" data-edit-label="<?= __('Edit Configurations') ?>">
                            <?= $block->getProduct()->getId()
                                && $block->getProduct()->getTypeId() === 'configurable'
                                ? __('Edit Configurations')
                                : __('Create Configurations')
                            ?>
                        </span>
                    </button>
                </div>
            </div>
            <fieldset class="fieldset">
                <?php echo $block->getChildHtml('generator'); ?>

                <!-- Select Associated Product popup -->
                <div id="associated-products-container">
                    <?php echo $block->getGridHtml(); ?>
                </div>

                <input type="hidden" name="affect_configurable_product_attributes" value="1" />
            </fieldset>
        </div>
    </div>
</div>
<script>
require([
    'jquery',
    'mage/template',
    'jquery/ui',
    'jquery/jquery.tabs',
    'mage/mage',
    'mage/backend/menu',
    'Magento_Ui/js/modal/modal',
    'mage/translate',
    'domReady!'
], function($, mageTemplate){
    'use strict';

    var variationsContainer = $("#<?php echo $block->getId()?>"),
        collapsableWrapper = $("#<?php echo $block->getId()?>-wrapper"),
        collapsableArea = $('> .collapse', collapsableWrapper),
        stockAvailabilityField = $('#quantity_and_stock_status'),
        qtyField = $('#qty'),
        inventoryQty = $('#inventory_qty'),
        inventoryAvailabilityField = $('#inventory_stock_availability'),
        currentProductTemplateControl = $('#product-template-suggest-container .action-dropdown > .action-toggle'),
        attributesInput = $("input[name='attributes[]']", variationsContainer),
        hasVariations = <?php echo($block->getProduct()->getTypeId() === Configurable::TYPE_CODE || $block->getRequest()->has('attributes')) ? 'true' : 'false' ?>,
        noImageUrl = '<?= $block->getNoImageUrl() ?>',
        isLocked = function (element) {
            return element.is('[data-locked]');
        },
        setElementDisabled = function (element, state, triggerEvent) {
            if (!isLocked(element)) {
                element.prop('disabled', state);
                if (triggerEvent) {
                    element.trigger('change')
                }
            }
        };

    collapsableArea
        .on('show', function() {
            currentProductTemplateControl
                .addClass('disabled')
                .prop('disabled', true);

            attributesInput.prop('disabled', false);

            inventoryQty.prop('disabled', true);
            inventoryAvailabilityField.removeProp('disabled');
            setElementDisabled(qtyField, true, true);
            setElementDisabled(stockAvailabilityField, false, false);
        })
        .on('hide', function() {
            currentProductTemplateControl
                .removeClass('disabled')
                .removeProp('disabled');
            inventoryQty.removeProp('disabled');
            inventoryAvailabilityField.prop('disabled', true);
            setElementDisabled(stockAvailabilityField, true, false);
            setElementDisabled(qtyField, false, true);
        })
        .collapse(hasVariations ? 'show' : 'hide');

    var $gridDialog = $('#associated-products-container').modal({
        title: $.mage.__('Select Associated Product'),
        type: 'popup'
    });

    $('[data-panel=product-variations]')
        .on('disable', '[data-role=product-variations-matrix]', function() {
            $(this).html('');
        })
        .on('click', '[data-action=choose]', function(event) {
            event.preventDefault();
            var grid = window.<?php echo $block->getGridJsObject() ?>;
            var $button = $(this);
            var attributeIds = [];
            variationsContainer.find("input[name='attributes[]']").each(function () {
                attributeIds.push($(this).val());
            });

            grid.reloadParams = {
                filter: $button.data('attributes'),
                'attributes[]': attributeIds
            };
            grid.reload(null, function() {
                $gridDialog.trigger('openModal');
            });

            grid.rowClickCallback = function(grid, event) {
                if (!this.rows || !this.rows.length) {
                    return;
                }
                var $gridRow = $(event.target).closest('tr'),
                    columnSelectorTemplate = '[data-column="%s"]';

                if ($gridRow.find(columnSelectorTemplate.replace('%s', 'entity_id')).length) {
                    var $matrixRow = $button.parents('[data-role=row]');

                    $.each('name,sku,qty,weight,entity_id,price'.split(','), function () {
                        var columnSelector = columnSelectorTemplate.replace('%s', this),
                            target = $matrixRow.find(columnSelector),
                            value = $.trim($gridRow.find(columnSelector).text());

                        target[target.is('input') ? 'val' : 'text'](value);//.append(button);
                    });

                    var parentElement = $matrixRow.find('[data-column=image]'),
                        uploaderControl = parentElement.find('[data-action=upload-image]', parentElement),
                        imageElement = $matrixRow.find('[data-role=image]'),
                        selectedImageSrc = $gridRow.find('[data-role=image-url]').val();

                    if (imageElement.length) {
                        selectedImageSrc = selectedImageSrc || noImageUrl;
                        imageElement.attr('src', selectedImageSrc);
                    } else {
                        var tmpl = $('[data-role=product-variations-matrix]').find('[data-template-for=variation-image]').html();

                        tmpl = mageTemplate(tmpl, {
                            data: {
                                url: selectedImageSrc
                            }
                        });

                        $(tmpl).prependTo(uploaderControl);
                    }
                    $matrixRow.find('[name=image]')
                        .attr('src', selectedImageSrc)
                        .attr('data-locked', '1')
                        .trigger('click')
                        .prop({disabled: true});

                    $matrixRow.find('[name$="[image]"]').remove();
                    $matrixRow.find('[data-block="variation-images"]').remove();
                }
                $gridDialog.trigger('closeModal');
            };
        });
});
</script>
